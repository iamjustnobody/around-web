[{"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\index.js":"1","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\App.js":"3","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\TopBar.js":"4","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Main.js":"5","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Register.js":"6","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\test.js":"7","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\constants.js":"8","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Home.js":"9","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Login.js":"10","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\GalleryShow.js":"11","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostButton.js":"12","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostForm.js":"13"},{"size":724,"mtime":1610405287825,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1487,"mtime":1610364710863,"results":"17","hashOfConfig":"15"},{"size":932,"mtime":1610232942290,"results":"18","hashOfConfig":"15"},{"size":4857,"mtime":1610989735809,"results":"19","hashOfConfig":"15"},{"size":12405,"mtime":1610838047460,"results":"20","hashOfConfig":"15"},{"size":163,"mtime":1609500573690,"results":"21","hashOfConfig":"15"},{"size":174,"mtime":1610371648897,"results":"22","hashOfConfig":"15"},{"size":4617,"mtime":1610840545304,"results":"23","hashOfConfig":"15"},{"size":5165,"mtime":1610989735821,"results":"24","hashOfConfig":"15"},{"size":2545,"mtime":1610401936790,"results":"25","hashOfConfig":"15"},{"size":4849,"mtime":1610840545262,"results":"26","hashOfConfig":"15"},{"size":3563,"mtime":1610667952546,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"ibnvfb",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\index.js",["62"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {GalleryShow} from './components/GalleryShow';\n\nReactDOM.render(\n // <React.StrictMode>\n //   <App />\n//  </React.StrictMode>,\n // <App />, document.getElementById('root')\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["63","64"],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\App.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\TopBar.js",["65"],"import React,{Component} from 'react';\r\nimport logo from \"../assets/images/logo.svg\";\r\nimport {LogoutOutlined} from '@ant-design/icons';\r\n\r\nexport class TopBar extends Component { //React.Component\r\n    render() {\r\n        return(\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <a\r\n                    className=\"App-title\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Around\r\n                </a>\r\n                {\r\n                    this.props.isSignedIn?\r\n                        <a onClick={this.props.toLogOut} className=\"LogoutIcon\">\r\n                            <LogoutOutlined /> Logout\r\n                        </a>\r\n                        :null\r\n                }\r\n            </header>\r\n        );\r\n    }\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Main.js",["66"],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Register.js",["67"],"/*\r\nimport  React from 'react';\r\n\r\nexport class Register extends React.Component{\r\n    render(){\r\n        return (\r\n            <div> Register </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nimport React from 'react';\r\nimport {Form, Input,\r\n //   Tooltip, Cascader, Select, Row, Col, Checkbox,\r\n    Button,\r\n //   AutoComplete,\r\n    message,\r\n} from 'antd';\r\n//import { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { API_ROOT } from '../constants';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Login} from \"./Login\";\r\n\r\n/*\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\nconst residences = [\r\n    {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n            {\r\n                value: 'hangzhou',\r\n                label: 'Hangzhou',\r\n                children: [\r\n                    {\r\n                        value: 'xihu',\r\n                        label: 'West Lake',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n            {\r\n                value: 'nanjing',\r\n                label: 'Nanjing',\r\n                children: [\r\n                    {\r\n                        value: 'zhonghuamen',\r\n                        label: 'Zhong Hua Men',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n */\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nexport const Register = (props) => { console.log(props);\r\n    const [form] = Form.useForm();\r\n/*\r\n    const webpage = ()=>{\r\n        return (<Redirect to=\"/login\" />); //<Login toSignIn={props.toLogIn}/>\r\n    }*/\r\n\r\n    const [logout2login, setLogout2login] = React.useState(false); //if register successfully\r\n //   console.log(logout2login);\r\n\r\n    const onFinish = (values) => { //(err, values)\r\n    //    validator(e,v)=>{try throw catch}\r\n        try{\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n            fetch(`${API_ROOT}/signup`, {\r\n             //   mode: \"no-cors\",\r\n             /*   headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Credentials': true,\r\n                    'Access-Control-Allow-Methods': 'POST, GET'\r\n                },*/\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: values.username,\r\n                    password: values.password,\r\n                }),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Registration Succeed');\r\n                console.log(response);\r\n\r\n            //    if(props.RtoSignOut){props.RtoSignOut()}; //opt while login, press register link go to '/register' register page with logo of logout\r\n                //submit register transfer to '/login' real login page (previously login forced to logout and need to re-login)\r\n                //if already logout this line of code not executed as RtoSignOut func undefined\r\n\r\n            //    console.log(props.history);\r\n                props.history.push(\"/login\"); //ok //needs {..props} or withroute in main.js  if Route render func instead of component register\r\n             //   return <Redirect to=\"/login\" />;\r\n             //     return <Login toSignIn={props.toLogIn}/>;\r\n             //   webpage();\r\n\r\n            //    setLogout2login(true); //ok\r\n            //    props.handleLogOut2LogIn();\r\n             //   console.log(props.logout2loginM);\r\n\r\n            }).catch((e) => {\r\n                message.error('Registration Failed');\r\n                console.log(e);\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n        /*\r\n        if(!err){\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n                fetch(`${API_ROOT}/signup`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    }),\r\n                }).then((response) => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    throw new Error(response.statusText);\r\n                }).then((response) =>\r\n                    response.text()\r\n                ).then((response) => {\r\n                    message.success('Registration Succeed');\r\n                    console.log(response);\r\n                }).catch((e) => {\r\n                    message.error('Registration Failed');\r\n                    console.log(e);\r\n                });\r\n\r\n\r\n\r\n        } */\r\n    };\r\n/*\r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    const [autoCompleteResult, setAutoCompleteResult] = React.useState([]);\r\n\r\n    const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n            setAutoCompleteResult([]);\r\n        } else {\r\n            setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n    };\r\n\r\n    const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n    }));\r\n */\r\n    //logout2login?<Redirect to=\"/login\" />:( //no matter if there is or not {..props} in main.js\r\n    //<Login toSignIn={this.props.toLogIn} /> //logout2login?<Login toSignIn={props.toLogIn}/>\r\n\r\n //   return props.logout2loginM?<Login toSignIn={props.RtoLogIn} handleLogOut2LogInR={props.handleLogOut2LogInR}/>:(\r\n    //still \"/register\" even in loginpage to log in, even after login succesully, /register present loginpage with logout logo instead of home page\r\n    //unless press login link to login, or press home link to login or redirect to home page\r\n    //  & cannot go back to real register form page (handleLogOut2LogInR in login.js stack issue\r\n    //press register link, in /register login page (presented) to log in but not direct to home page even login successasfully in '/register' login page\r\n    //     <Login toSignIn={props.RtoLogIn} handleLogOut2LogInR={props.handleLogOut2LogInR()}/ but stack!\r\n    //while login or logout, can redir to /register but always present login form page with/without logout logo\r\n\r\n   // return props.logout2loginM?<Redirect to=\"/login\" />:(\r\n    //in \"/login\" in login formpage or home page; and cannot go back to real register form page (show '/register' for a sec) no matter login (home page) or log out (log in page)\r\n\r\n  //  return logout2login?<Redirect to=\"/login\" />:( //ok\r\n        ////in \"/login\" in login formpage or home page; and can go back to real register form page (/register @ register page with/without logo if login/logout)\r\n    //like push history -> register while login; when register succed redirect or push to /login it'll be login or home page (if user already logged in) ->register no clear already login user\r\n    //push history - register while login, /register @ register page with logo - just like logout2login?<Redirect to=\"/login\" />\r\n    //ok\r\n  //  return logout2login?<Login toSignIn={props.RtoLogIn} />:(\r\n        //after register, '/register' presents login page with logout logo if already login (needa login? if login) (login page without logout logo if no login yet)\r\n        //then press register link -> still '/register' presenting login page with/without logo\r\n        //then press login or home link go to real login/home page; then press register link to re-register (real register page) but with/without logout logo\r\n    return (  //ok\r\n        < Form className=\"register\"\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            /*\r\n            initialValues={{\r\n                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                prefix: '86',\r\n            }}\r\n            */\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                {...tailFormItemLayout}\r\n/*\r\n                rules={[\r\n                    {\r\n                        validator: (err, values) => {\r\n                            //fire api call\r\n                            fetch(`${API_ROOT}/signup`, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify({\r\n                                    username: values.username,\r\n                                    password: values.password,\r\n                                }),\r\n                            }).then((response) => {\r\n                                if (response.ok) {\r\n                                    return response;\r\n                                }\r\n                                throw new Error(response.statusText);\r\n                            }).then((response) =>\r\n                                response.text()\r\n                            ).then((response) => {\r\n                                message.success('Registration Succeed2');\r\n                                console.log(response);\r\n                            }).catch((e) => {\r\n                                message.error('Registration Failed2');\r\n                                console.log(e);\r\n                            });\r\n                        }\r\n                    },\r\n                ]}\r\n*/\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Register\r\n                </Button>\r\n                <p>Or already have an account, go back <Link to=\"/login\">Log In</Link> Now! </p>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\n\r\n//export const Register=RegistrationForm;\r\n/*\r\nclass Registration extends React.Component{\r\n    render(){\r\n        return(RegistrationForm);\r\n    }\r\n}\r\n\r\nconst Register = Form.create()(Registration);\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\test.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\constants.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Home.js",["68"],"import React from 'react'\nimport {API_ROOT} from \"../constants\";\nimport {TOKEN_KEY,AUTH_HEADER} from \"../constants\";\nimport {GalleryShow} from \"./GalleryShow\";\nimport {Tabs,Button,Spin} from \"antd\";\nimport {CreatePostButton} from \"./CreatePostButton\";\n\n// const operations = <Button>Extra Action</Button>;\n//    const TabPane = Tabs.TabPane;\nconst { TabPane } = Tabs;\n\nexport class Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            error:\"\",\n            isLoadingPosts: false,\n            posts:[],\n            isLoadingGeoLocation:false,\n        };\n    }\n    componentDidMount() {\n        if(\"geolocation\" in navigator){\n            this.setState({isLoadingGeoLocation:true,});\n            navigator.geolocation.getCurrentPosition(\n                (des)=>{\n                    console.log(des);\n                    this.setState({isLoadingGeoLocation:false,});\n                   // localStorage.setItem(\"lat\",des.coords.latitude);\n                //    console.log(des.coords.latitude);\n                    localStorage.setItem(\"POS_KEY\",JSON.stringify(\n                        {\n                            lat:des.coords.latitude,\n                            lon:des.coords.longitude,\n                        }\n                    ))\n                    this.loadNearbyPosts();\n                },\n                (err)=>{\n                    console.log(err);\n                    this.setState({\n                        error:'failed to get user location',\n                        isLoadingGeoLocation:false,\n                    });\n                },\n                {\n                    enableHighAccuracy:true,\n                    maximumAge: 3600000,\n                    timeout:27000,\n                }\n            );\n        }else{\n            this.setState({\n                error:'Geolocation is not supported',\n            })\n        }\n        //this.loadNearbyPosts();\n    }\n    loadNearbyPosts=()=>{\n        const token=localStorage.getItem(TOKEN_KEY);\n        this.setState({\n            isLoadingPosts:true\n        })\n        const pos = JSON.parse(localStorage.getItem(\"POS_KEY\"));\n    //    console.log(pos); pos is an object could rewritten as const {lat,lon}\n        fetch(`${API_ROOT}/search?lat=${pos.lat}&lon=${pos.lon}&range=20000`,{\n            method:'GET',\n            headers:{\n                Authorization: `${AUTH_HEADER} ${token}`\n            },\n        })\n            .then((response)=>{\n            if(response.ok){  //true\n                return response.json();\n            }\n            throw new Error(\"Fail to load posts\");\n        }).then((response)=>{\n            console.log(response);\n            this.setState({\n                isLoadingPosts:false,\n                posts:response?response:[]\n            });\n        }).catch((err)=>{\n            this.setState({\n                isLoadingPosts:false,\n                error:err.message,\n            });\n            console.log(err.message);\n        });\n\n    }\n    getImagePosts=()=>{\n        if(this.state.error){\n            return this.state.error;\n        }else if(this.state.isLoadingGeoLocation) {\n            return <div> <Spin tip=\"loading Geolocation...\" /> </div>;\n        }else if(this.state.isLoadingPosts) {\n            return <div> loading posts... </div>;\n        }else if(this.state.posts&&this.state.posts.length>0){\n            const postimg=this.state.posts.map(({User,url,message}) => ({\n                user: User,\n                src: url,\n                thumbnail: url,\n                caption: message,\n                thumbnailWidth: 400,\n                thumbnailHeight: 300\n            }));\n        //    return 'gallary'+this.state.posts.length;\n            return <GalleryShow images={postimg} />\n        }else{\n            return 'No nearby Posts';\n        }\n    }\n    render(){\n        const operations = <CreatePostButton loadNBPost={this.loadNearbyPosts}/>;\n    //    const operations = <CreatePostButton {...this.props}/>; //push history in CPB.js\n    //    const operations = <CreatePostButton />;\n        return ( //tabBarExtraContent={operations}\n            <Tabs className=\"main-tabs\" defaultActiveKey=\"1\" centered tabBarExtraContent={operations}>\n                <TabPane tab=\"Tab 1\" key=\"1\">\n                    {this.getImagePosts()}\n                </TabPane>\n                <TabPane tab=\"Tab 2\" key=\"2\">\n                    Content of tab 2\n                </TabPane>\n                <TabPane tab=\"Tab 3\" key=\"3\">\n                    Content of tab 3\n                </TabPane>\n            </Tabs>\n\n        );\n    }\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Login.js",["69","70","71","72","73","74"],"import React from 'react'\r\n/*\r\nexport class Login extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <p>login</p>\r\n                <button onClick={this.props.toSignIn}>log in</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nimport {Form, Input, Button, Checkbox, message} from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {API_ROOT, TOKEN_KEY} from \"../constants\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Home} from \"./Home\";\r\nimport {Register} from \"./Register\";\r\n\r\nexport const Login = (props) => { //console.log(props.toSignIn);\r\n    console.log(props);\r\n  //  let bu=false;\r\n    const [testbu, setTestBU] = React.useState(false);\r\n\r\n //   props.handleLogOut2LogInR();\r\n    const onFinish = (values) => {\r\n        try{\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n            fetch(`${API_ROOT}/login`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: values.username,\r\n                    password: values.password,\r\n                }),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response.text();\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Login Succeed');\r\n                console.log(response);  //Bearer\r\n            //    props.toSignIn();\r\n              //  props.history.push(\"/home\");\r\n             //   props.history.push(\"/home\",{ isSignedIn: true,});\r\n              /*  props.history.push({\r\n                    pathname: '/home',\r\n                    state: { isSignedIn: true,}\r\n                })*/\r\n             //   return <Redirect to=\"/home\" />;\r\n              //  return <Home toSignOut={props.toLogOut}/ //not dealing w state either\r\n\r\n            //    localStorage.setItem(TOKEN_KEY,response); props.history.push(\"/register\");\r\n                //login ok can direct to register page but never home page (already login & Bearer) as no change to top states\r\n                // unless <Route /home component={Home} BUT homepage (already login w Bearer) without logo of logout (no change to state affecting topbar)\r\n                //can go back to login\r\n                //btn=<Login {...props} toSignIn={this.props.toLogIn}/> in main.js or below\r\n                //test: main.js <Route path=\"/login\" component={Login}/> <Route path=\"/login\" render={this.getStatus}/>\r\n               // const bu=<Redirect to=\"/register\" />;\r\n                //bu=true;\r\n            //    setTestBU(true);  localStorage.setItem(TOKEN_KEY,response);\r\n\r\n            //    props.handleLogOut2LogInR();\r\n                props.toSignIn(response);  //response as Bearer //deals with app.js state, compared to aboves\r\n                //LOCALSTORAGE\r\n            }).catch((e) => {\r\n                message.error('Login Failed');\r\n                console.log(e);\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n    };\r\n// return bu?<Redirect to=\"/register\" /> : (  //<form>  //cannot transfer\r\n //   return testbu?<Redirect to=\"/register\" /> : (  //can transfer same as push history above:\r\n        // change to <Route /home component={Home} shows homepage (already login w Bearer) without logo of logout ((no change to state affecting topbar)\r\n        //can go back to login again\r\n //   return testbu?<Register /> : (\r\n        // /login w register page cannot go back to login unless press register or home (no logout logo if already login)\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            /*\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n             */\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                    Log in\r\n                </Button>\r\n                Or <Link to=\"/register\">Register Now!</Link>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\GalleryShow.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostButton.js",["75","76","77","78"],"import React from 'react';\r\nimport {Button, message, Modal} from \"antd\";\r\nimport {CreatePostForm} from \"./CreatePostForm\";\r\nimport {API_ROOT, TOKEN_KEY, AUTH_HEADER} from \"../constants\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Home} from \"./Home\";\r\n\r\n/*\r\nexport class CreatePostButton extends React.Component{\r\n    render(){\r\n        return (\r\n            <Button> post </Button>\r\n        );\r\n    }\r\n}*/\r\n\r\nconst normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n}; //<CreatePostForm normFile={normFile}/> //getValueFromEvent={props.normFile} for FC or this.props.normFile for CC\r\n\r\nexport const CreatePostButton = (props) => { console.log(props);\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const [eventMsg, setEventMsg] = React.useState(\"\");\r\n    const [eventImg, setEventImg] = React.useState(null);\r\n\r\n    const [homeUpdate, setHomeUpdate] = React.useState(false);\r\n\r\n    const showModal = () => {\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleEventImg=(e)=>{\r\n        setEventImg(normFile(e));\r\n    }\r\n    const handleEventMsg=(e)=>{\r\n        setEventMsg(e.target.value);\r\n   //     return e.target.value; //<input value=xxx i.e. {} or ''\r\n    }\r\n//handleEventValue=(getValueFromEvent)=>{setEventValue(getValueFromEvent);}\r\n    const handleOk = () =>  {\r\n        setConfirmLoading(true);\r\n   //     console.log(eventMsg);\r\n     //   console.log(eventImg);\r\n//fire API\r\n        try{\r\n            console.log(eventMsg);\r\n            console.log(eventImg);\r\n            //fire api call\r\n            const formData=new FormData();\r\n            const loc = JSON.parse(localStorage.getItem(\"POS_KEY\"));\r\n            formData.set(\"lat\",loc.lat);\r\n            formData.set(\"lon\",loc.lon);\r\n            formData.set(\"message\",eventMsg);\r\n            formData.set(\"image\",eventImg[0].originFileObj);\r\n            const softtoken=localStorage.getItem(TOKEN_KEY);\r\n            fetch(`${API_ROOT}/post`, {\r\n                method: 'POST',\r\n                body: formData,\r\n                headers: {\r\n                    Authorization: `${AUTH_HEADER} ${softtoken}`\r\n                }\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Post Succeed');\r\n                console.log(response);\r\n                setConfirmLoading(false);\r\n                setVisible(false);\r\n                props.loadNBPost();//this//loadNearbyPost(); //reflesh homepage\r\n                // operations = <CreatePostButton loadNBPost={this.loadNearbyPosts}/>; in home.js\r\n            //    props.history.push(\"/home\"); //<CPB {...props}/> at home.js&& <Home {...props}/> at getStatus @Main.js\r\n                //push history not seem to reflesh the homepage as props.loadNBPost() does\r\n                //operations = <CreatePostButton {...this.props}/> in home.js\r\n\r\n          //      setHomeUpdate(true);\r\n                //    return <Redirect to=\"/home\" />;\r\n                //      return <Home toSignOut={props.toLogOut}/>;\r\n\r\n            }).catch((e) => {\r\n                message.error('Post Failed');\r\n                console.log(e);\r\n                setConfirmLoading(false);\r\n             //   props.form.resetFields();\r\n            //    form.resetFields();\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n        /*\r\n        setTimeout(() => {\r\n            setVisible(false);\r\n            setConfirmLoading(false);\r\n        }, 2000);\r\n         */\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        setVisible(false);\r\n    };\r\n\r\n    //return homeUpdate?<Home toSignOut={props.toLogOut}/>:(\r\n   // return homeUpdate?<Redirect to='/home' />:(\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Create New Post\r\n            </Button>\r\n            <Modal\r\n                title=\"Create New Post\"\r\n                visible={visible}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                okText=\"Create\"\r\n            >\r\n                <CreatePostForm handleEVMsg={handleEventMsg} handleEVImg={handleEventImg}/>\r\n            </Modal>\r\n        </>\r\n    );\r\n    //getValueFromEvent={this.props.normFile}\r\n    //<CreatePostForm normFile={normFile}>\r\n    //getValueFromEvent={this.props.handleEV}\r\n    //<CreatePostForm normFile={normFile} handleEV={handleEventValue}/> <CreatePostForm handleEV={handleEventValue}/>\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostForm.js",["79","80"],"import React from 'react';\r\nimport {Form, Input, Upload} from \"antd\";\r\nimport {InboxOutlined} from '@ant-design/icons';\r\n\r\n/*\r\nconst normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n}; //getValueFromEvent={normFile}\r\n */\r\n\r\nfunction b4ULbu (){return false;} //beforeUpload={b4ULbu}\r\nconst b4ULbu2 = ()=>{return false;}  //beforeUpload={b4ULbu2}\r\nconst b4ULbu3 = () => false; //beforeUpload={b4ULbu3}\r\n\r\nexport class CreatePostForm extends React.Component{\r\n    b4UL = ()=>{return false;}  //beforeUpload={this.b4UL}\r\n    b4UL2 = () => false; //beforeUpload={this.b4UL2}\r\n\r\n  // wrong b4UL3 below\r\n   //  this.state.b4UL3={false}; //b4UL3={false}; //both inside <> or false should be field here inside {} or var/const/let outside class\r\n   // b4UL3=false; ok grammarily//use const b4UL3=false outside class inside/outside function\r\n\r\n   // state={b4UL3:false,}\r\n    //equals to constructor (props){super(props);this.state={b4UL3:false,};}\r\n//beforeUpload={this.b4UL3}\r\n\r\n    // beforeUpload={false}??? or just beforeUpload???\r\n    //or use const [,]=React.useState(false)\r\n\r\n    render(){\r\n        const formItemLayout={\r\n            labelCol :{span: 6},\r\n            wrapperCol: {span: 14},\r\n        }; //{...formItemLayout}\r\n        return (\r\n            <Form {...formItemLayout}>\r\n                <Form.Item\r\n                    name=\"message\"\r\n                    label=\"Message\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your messages!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input placeholder=\"Please input your messages\" onChange={this.props.handleEVMsg}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"Image\"\r\n                           name=\"Image\"\r\n                           rules={[\r\n                               {\r\n                                   required: true,\r\n                                   message: 'Please select your image!',\r\n                               },\r\n                           ]}\r\n                >\r\n                    <Form.Item name=\"image\"\r\n                               valuePropName=\"fileList\"\r\n                               getValueFromEvent={this.props.handleEVImg}\r\n                               noStyle\r\n                    >\r\n                        <Upload.Dragger name=\"files\" beforeUpload={b4ULbu}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                            <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n                        </Upload.Dragger>\r\n                    </Form.Item>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n\r\n\r\n        );\r\n        //getValueFromEvent={this.props.normFile} //handleEV=(getValueFromEvent)=>{setEventValue(getValueFromEvent);}\r\n        //<CreatePostForm normFile={normFile}> <CreatePostForm normFile={normFile} handleEV={handleEventValue}/>\r\n        //getValueFromEvent={this.props.handleEV}\r\n        //<CreatePostForm normFile={normFile} handleEV={handleEventValue}/> <CreatePostForm handleEV={handleEventValue}/>\r\n\r\n   //onChange={(e)=>{this.props.handleEVMsg(e);}}  getValueFromEvent={(e)=>this.props.handleEVImg}\r\n    }\r\n}",{"ruleId":"81","severity":1,"message":"82","line":7,"column":9,"nodeType":"83","messageId":"84","endLine":7,"endColumn":20},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":20,"column":25,"nodeType":"91","endLine":20,"endColumn":81},{"ruleId":"81","severity":1,"message":"92","line":3,"column":9,"nodeType":"83","messageId":"84","endLine":3,"endColumn":13},{"ruleId":"81","severity":1,"message":"93","line":23,"column":9,"nodeType":"83","messageId":"84","endLine":23,"endColumn":14},{"ruleId":"81","severity":1,"message":"94","line":5,"column":14,"nodeType":"83","messageId":"84","endLine":5,"endColumn":20},{"ruleId":"81","severity":1,"message":"95","line":15,"column":30,"nodeType":"83","messageId":"84","endLine":15,"endColumn":38},{"ruleId":"81","severity":1,"message":"96","line":18,"column":15,"nodeType":"83","messageId":"84","endLine":18,"endColumn":23},{"ruleId":"81","severity":1,"message":"97","line":19,"column":9,"nodeType":"83","messageId":"84","endLine":19,"endColumn":13},{"ruleId":"81","severity":1,"message":"98","line":20,"column":9,"nodeType":"83","messageId":"84","endLine":20,"endColumn":17},{"ruleId":"81","severity":1,"message":"99","line":25,"column":12,"nodeType":"83","messageId":"84","endLine":25,"endColumn":18},{"ruleId":"81","severity":1,"message":"100","line":25,"column":20,"nodeType":"83","messageId":"84","endLine":25,"endColumn":29},{"ruleId":"81","severity":1,"message":"96","line":5,"column":9,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"81","severity":1,"message":"97","line":6,"column":9,"nodeType":"83","messageId":"84","endLine":6,"endColumn":13},{"ruleId":"81","severity":1,"message":"101","line":33,"column":12,"nodeType":"83","messageId":"84","endLine":33,"endColumn":22},{"ruleId":"81","severity":1,"message":"102","line":33,"column":24,"nodeType":"83","messageId":"84","endLine":33,"endColumn":37},{"ruleId":"81","severity":1,"message":"103","line":18,"column":7,"nodeType":"83","messageId":"84","endLine":18,"endColumn":14},{"ruleId":"81","severity":1,"message":"104","line":19,"column":7,"nodeType":"83","messageId":"84","endLine":19,"endColumn":14},"no-unused-vars","'GalleryShow' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'test' is defined but never used.","'Login' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Redirect' is defined but never used.","'Home' is defined but never used.","'Register' is defined but never used.","'testbu' is assigned a value but never used.","'setTestBU' is assigned a value but never used.","'homeUpdate' is assigned a value but never used.","'setHomeUpdate' is assigned a value but never used.","'b4ULbu2' is assigned a value but never used.","'b4ULbu3' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]