[{"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\index.js":"1","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\App.js":"3","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\TopBar.js":"4","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Main.js":"5","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Register.js":"6","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\test.js":"7","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\constants.js":"8","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Home.js":"9","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Login.js":"10","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\GalleryShow.js":"11"},{"size":724,"mtime":1610405287825,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1487,"mtime":1610364710863,"results":"15","hashOfConfig":"13"},{"size":932,"mtime":1610232942290,"results":"16","hashOfConfig":"13"},{"size":1209,"mtime":1610215808610,"results":"17","hashOfConfig":"13"},{"size":9104,"mtime":1610229568923,"results":"18","hashOfConfig":"13"},{"size":163,"mtime":1609500573690,"results":"19","hashOfConfig":"13"},{"size":174,"mtime":1610371648897,"results":"20","hashOfConfig":"13"},{"size":2277,"mtime":1610409436471,"results":"21","hashOfConfig":"13"},{"size":3266,"mtime":1610372194612,"results":"22","hashOfConfig":"13"},{"size":2545,"mtime":1610401936790,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"ibnvfb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\index.js",["52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {GalleryShow} from './components/GalleryShow';\n\nReactDOM.render(\n // <React.StrictMode>\n //   <App />\n//  </React.StrictMode>,\n // <App />, document.getElementById('root')\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["53","54"],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\App.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\TopBar.js",["55"],"import React,{Component} from 'react';\r\nimport logo from \"../assets/images/logo.svg\";\r\nimport {LogoutOutlined} from '@ant-design/icons';\r\n\r\nexport class TopBar extends Component { //React.Component\r\n    render() {\r\n        return(\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <a\r\n                    className=\"App-title\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Around\r\n                </a>\r\n                {\r\n                    this.props.isSignedIn?\r\n                        <a onClick={this.props.toLogOut} className=\"LogoutIcon\">\r\n                            <LogoutOutlined /> Logout\r\n                        </a>\r\n                        :null\r\n                }\r\n            </header>\r\n        );\r\n    }\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Main.js",["56"],"import  React from 'react';\r\nimport {Register} from \"./Register\";\r\nimport {test} from \"./test\"\r\nimport {Login} from \"./Login\";\r\nimport {Home} from \"./Home\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Route,Switch} from 'react-router-dom';\r\n//import {Switch} from \"antd\";\r\n\r\nexport class Main extends React.Component{\r\n    getStatus=()=>{\r\n        let btn;\r\n        if(this.props.isSignedIn){\r\n            btn=<Home toSignOut={this.props.toLogOut}/>\r\n        }\r\n        else{\r\n            btn=<Login toSignIn={this.props.toLogIn}/>\r\n        }\r\n        return btn;\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"main\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={this.getStatus}/>\r\n                    <Route path=\"/login\" render={this.getStatus}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Route path=\"/home\" render={this.getStatus}/>\r\n                    <Route component={Login}/>\r\n                </Switch>\r\n                <Link to=\"/register\">Register</Link>\r\n                <Link to=\"/login\">Login</Link>\r\n                <Link to=\"/home\">Home</Link>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Register.js",["57","58"],"/*\r\nimport  React from 'react';\r\n\r\nexport class Register extends React.Component{\r\n    render(){\r\n        return (\r\n            <div> Register </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nimport React from 'react';\r\nimport {Form, Input,\r\n //   Tooltip, Cascader, Select, Row, Col, Checkbox,\r\n    Button,\r\n //   AutoComplete,\r\n    message,\r\n} from 'antd';\r\n//import { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { API_ROOT } from '../constants';\r\nimport {Link,Redirect} from \"react-router-dom\";\r\nimport {Login} from \"./Login\";\r\n\r\n/*\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\nconst residences = [\r\n    {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n            {\r\n                value: 'hangzhou',\r\n                label: 'Hangzhou',\r\n                children: [\r\n                    {\r\n                        value: 'xihu',\r\n                        label: 'West Lake',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n            {\r\n                value: 'nanjing',\r\n                label: 'Nanjing',\r\n                children: [\r\n                    {\r\n                        value: 'zhonghuamen',\r\n                        label: 'Zhong Hua Men',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n */\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nexport const Register = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values) => { //(err, values)\r\n    //    validator(e,v)=>{try throw catch}\r\n        try{\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n            fetch(`${API_ROOT}/signup`, {\r\n             //   mode: \"no-cors\",\r\n             /*   headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Credentials': true,\r\n                    'Access-Control-Allow-Methods': 'POST, GET'\r\n                },*/\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: values.username,\r\n                    password: values.password,\r\n                }),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Registration Succeed');\r\n                console.log(response);\r\n                props.history.push(\"/login\");\r\n            //    return <Redirect to=\"/login\" />;\r\n            //      return <Login toSignIn={props.toLogIn}/>;\r\n\r\n            }).catch((e) => {\r\n                message.error('Registration Failed');\r\n                console.log(e);\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n        /*\r\n        if(!err){\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n                fetch(`${API_ROOT}/signup`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    }),\r\n                }).then((response) => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    throw new Error(response.statusText);\r\n                }).then((response) =>\r\n                    response.text()\r\n                ).then((response) => {\r\n                    message.success('Registration Succeed');\r\n                    console.log(response);\r\n                }).catch((e) => {\r\n                    message.error('Registration Failed');\r\n                    console.log(e);\r\n                });\r\n\r\n\r\n\r\n        } */\r\n    };\r\n/*\r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    const [autoCompleteResult, setAutoCompleteResult] = React.useState([]);\r\n\r\n    const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n            setAutoCompleteResult([]);\r\n        } else {\r\n            setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n    };\r\n\r\n    const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n    }));\r\n */\r\n    return (\r\n        < Form className=\"register\"\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            /*\r\n            initialValues={{\r\n                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                prefix: '86',\r\n            }}\r\n            */\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                {...tailFormItemLayout}\r\n/*\r\n                rules={[\r\n                    {\r\n                        validator: (err, values) => {\r\n                            //fire api call\r\n                            fetch(`${API_ROOT}/signup`, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify({\r\n                                    username: values.username,\r\n                                    password: values.password,\r\n                                }),\r\n                            }).then((response) => {\r\n                                if (response.ok) {\r\n                                    return response;\r\n                                }\r\n                                throw new Error(response.statusText);\r\n                            }).then((response) =>\r\n                                response.text()\r\n                            ).then((response) => {\r\n                                message.success('Registration Succeed2');\r\n                                console.log(response);\r\n                            }).catch((e) => {\r\n                                message.error('Registration Failed2');\r\n                                console.log(e);\r\n                            });\r\n                        }\r\n                    },\r\n                ]}\r\n*/\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Register\r\n                </Button>\r\n                <p>Or already have an account, go back <Link to=\"/login\">Log In</Link> Now! </p>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\n\r\n//export const Register=RegistrationForm;\r\n/*\r\nclass Registration extends React.Component{\r\n    render(){\r\n        return(RegistrationForm);\r\n    }\r\n}\r\n\r\nconst Register = Form.create()(Registration);\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\test.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\constants.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Home.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Login.js",["59","60","61"],"import React from 'react'\r\n/*\r\nexport class Login extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <p>login</p>\r\n                <button onClick={this.props.toSignIn}>log in</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nimport {Form, Input, Button, Checkbox, message} from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {API_ROOT} from \"../constants\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Home} from \"./Home\";\r\n\r\nexport const Login = (props) => { //console.log(props.toSignIn);\r\n    const onFinish = (values) => {\r\n        try{\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n            fetch(`${API_ROOT}/login`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: values.username,\r\n                    password: values.password,\r\n                }),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response.text();\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Login Succeed');\r\n                console.log(response);  //Bearer\r\n            //    props.toSignIn();\r\n            //    props.history.push(\"/home\");\r\n             //   return <Redirect to=\"/home\" />;\r\n              //  return <Home toSignOut={props.toLogOut}/\r\n                props.toSignIn(response);  //response as Bearer\r\n                //LOCALSTORAGE\r\n            }).catch((e) => {\r\n                message.error('Login Failed');\r\n                console.log(e);\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            /*\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n             */\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                    Log in\r\n                </Button>\r\n                Or <Link to=\"/register\">Register Now!</Link>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\GalleryShow.js",[],{"ruleId":"62","severity":1,"message":"63","line":7,"column":9,"nodeType":"64","messageId":"65","endLine":7,"endColumn":20},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":20,"column":25,"nodeType":"72","endLine":20,"endColumn":81},{"ruleId":"62","severity":1,"message":"73","line":3,"column":9,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"74","line":22,"column":14,"nodeType":"64","messageId":"65","endLine":22,"endColumn":22},{"ruleId":"62","severity":1,"message":"75","line":23,"column":9,"nodeType":"64","messageId":"65","endLine":23,"endColumn":14},{"ruleId":"62","severity":1,"message":"76","line":15,"column":30,"nodeType":"64","messageId":"65","endLine":15,"endColumn":38},{"ruleId":"62","severity":1,"message":"74","line":18,"column":15,"nodeType":"64","messageId":"65","endLine":18,"endColumn":23},{"ruleId":"62","severity":1,"message":"77","line":19,"column":9,"nodeType":"64","messageId":"65","endLine":19,"endColumn":13},"no-unused-vars","'GalleryShow' is defined but never used.","Identifier","unusedVar","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'test' is defined but never used.","'Redirect' is defined but never used.","'Login' is defined but never used.","'Checkbox' is defined but never used.","'Home' is defined but never used.","no-global-assign","no-unsafe-negation"]