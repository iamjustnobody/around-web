[{"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\index.js":"1","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\reportWebVitals.js":"2","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\App.js":"3","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\TopBar.js":"4","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Main.js":"5","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Register.js":"6","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\test.js":"7","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\constants.js":"8","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Home.js":"9","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Login.js":"10","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\GalleryShow.js":"11","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostButton.js":"12","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostForm.js":"13","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\AroundMap.js":"14","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\AroundMarker.js":"15"},{"size":724,"mtime":1610405287825,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1487,"mtime":1610364710863,"results":"19","hashOfConfig":"17"},{"size":932,"mtime":1610232942290,"results":"20","hashOfConfig":"17"},{"size":4857,"mtime":1610989735809,"results":"21","hashOfConfig":"17"},{"size":12405,"mtime":1610838047460,"results":"22","hashOfConfig":"17"},{"size":163,"mtime":1609500573690,"results":"23","hashOfConfig":"17"},{"size":205,"mtime":1611006696327,"results":"24","hashOfConfig":"17"},{"size":5122,"mtime":1611006426462,"results":"25","hashOfConfig":"17"},{"size":5167,"mtime":1610990759172,"results":"26","hashOfConfig":"17"},{"size":2545,"mtime":1610401936790,"results":"27","hashOfConfig":"17"},{"size":5058,"mtime":1611008476797,"results":"28","hashOfConfig":"17"},{"size":3563,"mtime":1610667952546,"results":"29","hashOfConfig":"17"},{"size":926,"mtime":1611007247895,"results":"30","hashOfConfig":"17"},{"size":1576,"mtime":1611016484768,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"ibnvfb",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"35"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\index.js",["72"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {GalleryShow} from './components/GalleryShow';\n\nReactDOM.render(\n // <React.StrictMode>\n //   <App />\n//  </React.StrictMode>,\n // <App />, document.getElementById('root')\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["73","74"],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\App.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\TopBar.js",["75"],"import React,{Component} from 'react';\r\nimport logo from \"../assets/images/logo.svg\";\r\nimport {LogoutOutlined} from '@ant-design/icons';\r\n\r\nexport class TopBar extends Component { //React.Component\r\n    render() {\r\n        return(\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <a\r\n                    className=\"App-title\"\r\n                    href=\"https://reactjs.org\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    Around\r\n                </a>\r\n                {\r\n                    this.props.isSignedIn?\r\n                        <a onClick={this.props.toLogOut} className=\"LogoutIcon\">\r\n                            <LogoutOutlined /> Logout\r\n                        </a>\r\n                        :null\r\n                }\r\n            </header>\r\n        );\r\n    }\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Main.js",["76"],"import  React from 'react';\r\nimport {Register} from \"./Register\";\r\nimport {test} from \"./test\"\r\nimport {Login} from \"./Login\";\r\nimport {Home} from \"./Home\";\r\nimport {Link} from 'react-router-dom';\r\nimport {Route,Switch} from 'react-router-dom';\r\n//import {Switch} from \"antd\";\r\n\r\nexport class Main extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={logout2loginM:false};\r\n    }\r\n    handleLogOut2LogIn=()=>{\r\n        this.setState({logout2loginM:true});\r\n    }\r\n    handleLogOut2LogInR=()=>{\r\n        this.setState({logout2loginM:false});\r\n    }\r\n\r\n\r\n    getStatus=(props)=>{ //console.log(\"halala\"+this.props);//only having toLogIn func\r\n        let btn;\r\n        if(this.props.isSignedIn){\r\n            btn=<Home toSignOut={this.props.toLogOut}/>\r\n        } //btn=<Home {...props} toSignOut={this.props.toLogOut}/> //pass props to Home.js <CPB {...props}/> to CPB.js\r\n        else{ //this.handleLogOut2LogIn();\r\n            btn=<Login toSignIn={this.props.toLogIn}/>\r\n            //btn=<Login {...props} toSignIn={this.props.toLogIn}/>   (& component={Home} in Route below: <Route path=\"/home\" component={Home}/> //opt )\r\n            // for testing transfer to register after succeed in login; push history to /register in login.js\r\n\r\n        //    btn=<Login toSignIn={this.props.toLogIn} handleLogOut2LogInR={this.handleLogOut2LogInR}/>\r\n            // handleLogOut2LogInR={this.handleLogOut2LogInR()}\r\n        } //<Login {...props} or history={this.props.history}\r\n        return btn;\r\n    }\r\n//<Route path=\"/login\" component={Login}/>\r\n// then can push history to other webpage (e.g. '/register')\r\n    //but no toSIgnIn property as component={Login} is like render <Login />\r\n    //path=\"/login\" render={this.getStatus} so Login is nested inside Main or child of Main\r\n    // but Register is not - because component={Register}\r\n/*\r\n    logOut2loginIfregistersuceed=(props)=>{\r\n        return (<Register logout2loginM={this.state.logout2loginM} handleLogOut2LogIn={this.handleLogOut2LogIn}\r\n                          RtoLogIn={this.props.toLogIn} handleLogOut2LogInR={this.handleLogOut2LogInR} />);\r\n    } //btn=<Login toSignIn={this.props.toLogIn} handleLogOut2LogInR={this.handleLogOut2LogInR}/>\r\n    //<Route path=\"/register\" render={this.logOut2loginIfregistersuceed}/>\r\n    // //   return props.logout2loginM?<Login toSignIn={props.RtoLogIn} handleLogOut2LogInR={props.handleLogOut2LogInR}/>: in register.js\r\n    */\r\n\r\n /*\r\n    logOut2loginIfregistersuceed=(props)=>{\r\n    //    this.handleLogOut2LogInR();\r\n        return (<Register RtoSignOut={this.props.toLogOut}  //for clear login when register (if there's login user)\r\n                          logout2loginM={this.state.logout2loginM} handleLogOut2LogIn={this.handleLogOut2LogIn} //for render <Login> or redir to login in register.js\r\n                          RtoLogIn={this.props.toLogIn} handleLogOut2LogInR={this.handleLogOut2LogInR} />); //previously props passed to login.js from main.js now register->login\r\n                          //and reverse logout2loginM using handleLogOut2LogInR in login.js when register succed & redir to login or <login/>,\r\n                          //so that after presenting <login> or '/login', it still can goback to register form page to register\r\n    }//{...props}\r\n    // <Route path=\"/register\" render={this.logOut2loginIfregistersuceed}/>\r\n    //props.logout2loginM?<Login toSignIn={props.RtoLogIn} handleLogOut2LogInR={props.handleLogOut2LogInR}/> in register.js\r\n    */\r\n\r\n    renderLogin=(props)=>{\r\n        return (<Register RtoLogIn={this.props.toLogIn} />);\r\n    }\r\n    //<Route path=\"/register\" render={this.renderLogin}/> //logout2login?<Login toSignIn={props.RtoLogIn} /> in register.js\r\n    //btn=<Login toSignIn={this.props.toLogIn}/>\r\n\r\n    //<Redirect /> in register. js can use both render {func} or component in <Route />\r\n\r\n/*\r\n    clearLoginWhenRegisterSucceed=(props)=>{ //console.log(\"haha\"+this.props);//toLogOut func undefined\r\n        return (<Register RtoSignOut={this.props.toLogOut} />);\r\n    } //{...props} used when push history; no need when <redirect /\r\n    //<Route path=\"/register\" render={this.clearLoginWhenRegisterSucceed}/>\r\n    */\r\n    render(){\r\n        return (\r\n            <div className=\"main\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" render={this.getStatus}/>\r\n                    <Route path=\"/login\" render={this.getStatus}/>\r\n                    <Route path=\"/register\" component={Register}/>\r\n                    <Route path=\"/home\" render={this.getStatus}/>\r\n                    <Route component={Login}/>\r\n                </Switch>\r\n                <Link to=\"/register\">Register</Link>\r\n                <Link to=\"/login\">Login</Link>\r\n                <Link to=\"/home\">Home</Link>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Register.js",["77"],"/*\r\nimport  React from 'react';\r\n\r\nexport class Register extends React.Component{\r\n    render(){\r\n        return (\r\n            <div> Register </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nimport React from 'react';\r\nimport {Form, Input,\r\n //   Tooltip, Cascader, Select, Row, Col, Checkbox,\r\n    Button,\r\n //   AutoComplete,\r\n    message,\r\n} from 'antd';\r\n//import { QuestionCircleOutlined } from '@ant-design/icons';\r\nimport { API_ROOT } from '../constants';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Login} from \"./Login\";\r\n\r\n/*\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\nconst residences = [\r\n    {\r\n        value: 'zhejiang',\r\n        label: 'Zhejiang',\r\n        children: [\r\n            {\r\n                value: 'hangzhou',\r\n                label: 'Hangzhou',\r\n                children: [\r\n                    {\r\n                        value: 'xihu',\r\n                        label: 'West Lake',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        value: 'jiangsu',\r\n        label: 'Jiangsu',\r\n        children: [\r\n            {\r\n                value: 'nanjing',\r\n                label: 'Nanjing',\r\n                children: [\r\n                    {\r\n                        value: 'zhonghuamen',\r\n                        label: 'Zhong Hua Men',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n */\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nexport const Register = (props) => { console.log(props);\r\n    const [form] = Form.useForm();\r\n/*\r\n    const webpage = ()=>{\r\n        return (<Redirect to=\"/login\" />); //<Login toSignIn={props.toLogIn}/>\r\n    }*/\r\n\r\n    const [logout2login, setLogout2login] = React.useState(false); //if register successfully\r\n //   console.log(logout2login);\r\n\r\n    const onFinish = (values) => { //(err, values)\r\n    //    validator(e,v)=>{try throw catch}\r\n        try{\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n            fetch(`${API_ROOT}/signup`, {\r\n             //   mode: \"no-cors\",\r\n             /*   headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Credentials': true,\r\n                    'Access-Control-Allow-Methods': 'POST, GET'\r\n                },*/\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: values.username,\r\n                    password: values.password,\r\n                }),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Registration Succeed');\r\n                console.log(response);\r\n\r\n            //    if(props.RtoSignOut){props.RtoSignOut()}; //opt while login, press register link go to '/register' register page with logo of logout\r\n                //submit register transfer to '/login' real login page (previously login forced to logout and need to re-login)\r\n                //if already logout this line of code not executed as RtoSignOut func undefined\r\n\r\n            //    console.log(props.history);\r\n                props.history.push(\"/login\"); //ok //needs {..props} or withroute in main.js  if Route render func instead of component register\r\n             //   return <Redirect to=\"/login\" />;\r\n             //     return <Login toSignIn={props.toLogIn}/>;\r\n             //   webpage();\r\n\r\n            //    setLogout2login(true); //ok\r\n            //    props.handleLogOut2LogIn();\r\n             //   console.log(props.logout2loginM);\r\n\r\n            }).catch((e) => {\r\n                message.error('Registration Failed');\r\n                console.log(e);\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n        /*\r\n        if(!err){\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n                fetch(`${API_ROOT}/signup`, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({\r\n                        username: values.username,\r\n                        password: values.password,\r\n                    }),\r\n                }).then((response) => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    throw new Error(response.statusText);\r\n                }).then((response) =>\r\n                    response.text()\r\n                ).then((response) => {\r\n                    message.success('Registration Succeed');\r\n                    console.log(response);\r\n                }).catch((e) => {\r\n                    message.error('Registration Failed');\r\n                    console.log(e);\r\n                });\r\n\r\n\r\n\r\n        } */\r\n    };\r\n/*\r\n    const prefixSelector = (\r\n        <Form.Item name=\"prefix\" noStyle>\r\n            <Select\r\n                style={{\r\n                    width: 70,\r\n                }}\r\n            >\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n    const [autoCompleteResult, setAutoCompleteResult] = React.useState([]);\r\n\r\n    const onWebsiteChange = (value) => {\r\n        if (!value) {\r\n            setAutoCompleteResult([]);\r\n        } else {\r\n            setAutoCompleteResult(['.com', '.org', '.net'].map((domain) => `${value}${domain}`));\r\n        }\r\n    };\r\n\r\n    const websiteOptions = autoCompleteResult.map((website) => ({\r\n        label: website,\r\n        value: website,\r\n    }));\r\n */\r\n    //logout2login?<Redirect to=\"/login\" />:( //no matter if there is or not {..props} in main.js\r\n    //<Login toSignIn={this.props.toLogIn} /> //logout2login?<Login toSignIn={props.toLogIn}/>\r\n\r\n //   return props.logout2loginM?<Login toSignIn={props.RtoLogIn} handleLogOut2LogInR={props.handleLogOut2LogInR}/>:(\r\n    //still \"/register\" even in loginpage to log in, even after login succesully, /register present loginpage with logout logo instead of home page\r\n    //unless press login link to login, or press home link to login or redirect to home page\r\n    //  & cannot go back to real register form page (handleLogOut2LogInR in login.js stack issue\r\n    //press register link, in /register login page (presented) to log in but not direct to home page even login successasfully in '/register' login page\r\n    //     <Login toSignIn={props.RtoLogIn} handleLogOut2LogInR={props.handleLogOut2LogInR()}/ but stack!\r\n    //while login or logout, can redir to /register but always present login form page with/without logout logo\r\n\r\n   // return props.logout2loginM?<Redirect to=\"/login\" />:(\r\n    //in \"/login\" in login formpage or home page; and cannot go back to real register form page (show '/register' for a sec) no matter login (home page) or log out (log in page)\r\n\r\n  //  return logout2login?<Redirect to=\"/login\" />:( //ok\r\n        ////in \"/login\" in login formpage or home page; and can go back to real register form page (/register @ register page with/without logo if login/logout)\r\n    //like push history -> register while login; when register succed redirect or push to /login it'll be login or home page (if user already logged in) ->register no clear already login user\r\n    //push history - register while login, /register @ register page with logo - just like logout2login?<Redirect to=\"/login\" />\r\n    //ok\r\n  //  return logout2login?<Login toSignIn={props.RtoLogIn} />:(\r\n        //after register, '/register' presents login page with logout logo if already login (needa login? if login) (login page without logout logo if no login yet)\r\n        //then press register link -> still '/register' presenting login page with/without logo\r\n        //then press login or home link go to real login/home page; then press register link to re-register (real register page) but with/without logout logo\r\n    return (  //ok\r\n        < Form className=\"register\"\r\n            {...formItemLayout}\r\n            form={form}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            /*\r\n            initialValues={{\r\n                residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n                prefix: '86',\r\n            }}\r\n            */\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                {...tailFormItemLayout}\r\n/*\r\n                rules={[\r\n                    {\r\n                        validator: (err, values) => {\r\n                            //fire api call\r\n                            fetch(`${API_ROOT}/signup`, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify({\r\n                                    username: values.username,\r\n                                    password: values.password,\r\n                                }),\r\n                            }).then((response) => {\r\n                                if (response.ok) {\r\n                                    return response;\r\n                                }\r\n                                throw new Error(response.statusText);\r\n                            }).then((response) =>\r\n                                response.text()\r\n                            ).then((response) => {\r\n                                message.success('Registration Succeed2');\r\n                                console.log(response);\r\n                            }).catch((e) => {\r\n                                message.error('Registration Failed2');\r\n                                console.log(e);\r\n                            });\r\n                        }\r\n                    },\r\n                ]}\r\n*/\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Register\r\n                </Button>\r\n                <p>Or already have an account, go back <Link to=\"/login\">Log In</Link> Now! </p>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\n\r\n//export const Register=RegistrationForm;\r\n/*\r\nclass Registration extends React.Component{\r\n    render(){\r\n        return(RegistrationForm);\r\n    }\r\n}\r\n\r\nconst Register = Form.create()(Registration);\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\test.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\constants.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Home.js",["78"],"import React from 'react'\nimport {API_ROOT} from \"../constants\";\nimport {TOKEN_KEY,AUTH_HEADER} from \"../constants\";\nimport {GalleryShow} from \"./GalleryShow\";\nimport {Tabs,Button,Spin} from \"antd\";\nimport {CreatePostButton} from \"./CreatePostButton\";\nimport {AroundMap} from \"./AroundMap\";\n\n// const operations = <Button>Extra Action</Button>;\n//    const TabPane = Tabs.TabPane;\nconst { TabPane } = Tabs;\n\nexport class Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            error:\"\",\n            isLoadingPosts: false,\n            posts:[],\n            isLoadingGeoLocation:false,\n        };\n    }\n    componentDidMount() {\n        if(\"geolocation\" in navigator){\n            this.setState({isLoadingGeoLocation:true,});\n            navigator.geolocation.getCurrentPosition(\n                (des)=>{\n                    console.log(des);\n                    this.setState({isLoadingGeoLocation:false,});\n                   // localStorage.setItem(\"lat\",des.coords.latitude);\n                //    console.log(des.coords.latitude);\n                    localStorage.setItem(\"POS_KEY\",JSON.stringify(\n                        {\n                            lat:des.coords.latitude,\n                            lon:des.coords.longitude,\n                        }\n                    ))\n                    this.loadNearbyPosts();\n                },\n                (err)=>{\n                    console.log(err);\n                    this.setState({\n                        error:'failed to get user location',\n                        isLoadingGeoLocation:false,\n                    });\n                },\n                {\n                    enableHighAccuracy:true,\n                    maximumAge: 3600000,\n                    timeout:27000,\n                }\n            );\n        }else{\n            this.setState({\n                error:'Geolocation is not supported',\n            })\n        }\n        //this.loadNearbyPosts();\n    }\n    loadNearbyPosts=()=>{\n        const token=localStorage.getItem(TOKEN_KEY);\n        this.setState({\n            isLoadingPosts:true\n        })\n        const pos = JSON.parse(localStorage.getItem(\"POS_KEY\"));\n    //    console.log(pos); pos is an object could rewritten as const {lat,lon}\n        fetch(`${API_ROOT}/search?lat=${pos.lat}&lon=${pos.lon}&range=20000`,{\n            method:'GET',\n            headers:{\n                Authorization: `${AUTH_HEADER} ${token}`\n            },\n        })\n            .then((response)=>{\n            if(response.ok){  //true\n                return response.json();\n            }\n            throw new Error(\"Fail to load posts\");\n        }).then((response)=>{\n            console.log(response);\n            this.setState({\n                isLoadingPosts:false,\n                posts:response?response:[]\n            });\n        }).catch((err)=>{\n            this.setState({\n                isLoadingPosts:false,\n                error:err.message,\n            });\n            console.log(err.message);\n        });\n\n    }\n    getImagePosts=()=>{\n        if(this.state.error){\n            return this.state.error;\n        }else if(this.state.isLoadingGeoLocation) {\n            return <div> <Spin tip=\"loading Geolocation...\" /> </div>;\n        }else if(this.state.isLoadingPosts) {\n            return <div> loading posts... </div>;\n        }else if(this.state.posts&&this.state.posts.length>0){\n            const postimg=this.state.posts.map(({User,url,message}) => ({\n                user: User,\n                src: url,\n                thumbnail: url,\n                caption: message,\n                thumbnailWidth: 400,\n                thumbnailHeight: 300\n            }));\n        //    return 'gallary'+this.state.posts.length;\n            return <GalleryShow images={postimg} />\n        }else{\n            return 'No nearby Posts';\n        }\n    }\n    render(){\n        const operations = <CreatePostButton loadNBPost={this.loadNearbyPosts}/>;\n    //    const operations = <CreatePostButton {...this.props}/>; //push history in CPB.js\n    //    const operations = <CreatePostButton />;\n        return ( //tabBarExtraContent={operations}\n            <Tabs className=\"main-tabs\" defaultActiveKey=\"1\" centered tabBarExtraContent={operations}>\n                <TabPane tab=\"Tab 1\" key=\"1\">\n                    {this.getImagePosts()}\n                </TabPane>\n                <TabPane tab=\"Tab 2\" key=\"2\">\n                    Content of tab 2\n                </TabPane>\n                <TabPane tab=\"Tab 3\" key=\"3\">\n                    <AroundMap googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\n                               loadingElement={<div style={{ height: `100%` }} />}\n                               containerElement={<div style={{ height: '390px' }} />}\n                               mapElement={<div style={{ height: `100%` }} />}\n                               poststuff={this.state.posts}\n                    />\n                </TabPane>\n            </Tabs>\n\n        );\n    }\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\Login.js",["79","80","81","82","83","84"],"import React from 'react'\r\n/*\r\nexport class Login extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <p>login</p>\r\n                <button onClick={this.props.toSignIn}>log in</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nimport {Form, Input, Button, Checkbox, message} from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {API_ROOT, TOKEN_KEY} from \"../constants\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Home} from \"./Home\";\r\n//import {Register} from \"./Register\";\r\n\r\nexport const Login = (props) => { //console.log(props.toSignIn);\r\n    console.log(props);\r\n  //  let bu=false;\r\n    const [testbu, setTestBU] = React.useState(false);\r\n\r\n //   props.handleLogOut2LogInR();\r\n    const onFinish = (values) => {\r\n        try{\r\n            console.log('Received values of form: ', values);\r\n            //fire api call\r\n            fetch(`${API_ROOT}/login`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: values.username,\r\n                    password: values.password,\r\n                }),\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response.text();\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Login Succeed');\r\n                console.log(response);  //Bearer\r\n            //    props.toSignIn();\r\n              //  props.history.push(\"/home\");\r\n             //   props.history.push(\"/home\",{ isSignedIn: true,});\r\n              /*  props.history.push({\r\n                    pathname: '/home',\r\n                    state: { isSignedIn: true,}\r\n                })*/\r\n             //   return <Redirect to=\"/home\" />;\r\n              //  return <Home toSignOut={props.toLogOut}/ //not dealing w state either\r\n\r\n            //    localStorage.setItem(TOKEN_KEY,response); props.history.push(\"/register\");\r\n                //login ok can direct to register page but never home page (already login & Bearer) as no change to top states\r\n                // unless <Route /home component={Home} BUT homepage (already login w Bearer) without logo of logout (no change to state affecting topbar)\r\n                //can go back to login\r\n                //btn=<Login {...props} toSignIn={this.props.toLogIn}/> in main.js or below\r\n                //test: main.js <Route path=\"/login\" component={Login}/> <Route path=\"/login\" render={this.getStatus}/>\r\n               // const bu=<Redirect to=\"/register\" />;\r\n                //bu=true;\r\n            //    setTestBU(true);  localStorage.setItem(TOKEN_KEY,response);\r\n\r\n            //    props.handleLogOut2LogInR();\r\n                props.toSignIn(response);  //response as Bearer //deals with app.js state, compared to aboves //changes to states also change topbar logo\r\n                //LOCALSTORAGE\r\n            }).catch((e) => {\r\n                message.error('Login Failed');\r\n                console.log(e);\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n    };\r\n// return bu?<Redirect to=\"/register\" /> : (  //<form>  //cannot transfer\r\n //   return testbu?<Redirect to=\"/register\" /> : (  //can transfer same as push history above:\r\n        // change to <Route /home component={Home} shows homepage (already login w Bearer) without logo of logout ((no change to state affecting topbar)\r\n        //can go back to login again\r\n //   return testbu?<Register /> : (\r\n        // /login w register page cannot go back to login unless press register or home (no logout logo if already login)\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            /*\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n             */\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                    Log in\r\n                </Button>\r\n                Or <Link to=\"/register\">Register Now!</Link>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\GalleryShow.js",[],"C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostButton.js",["85","86","87","88","89"],"import React from 'react';\r\nimport {Button, message, Modal} from \"antd\";\r\nimport {CreatePostForm} from \"./CreatePostForm\";\r\nimport {API_ROOT, TOKEN_KEY, AUTH_HEADER} from \"../constants\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Home} from \"./Home\";\r\nimport {LOC_SHAKE} from \"../constants\";\r\n\r\n/*\r\nexport class CreatePostButton extends React.Component{\r\n    render(){\r\n        return (\r\n            <Button> post </Button>\r\n        );\r\n    }\r\n}*/\r\n\r\nconst normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n}; //<CreatePostForm normFile={normFile}/> //getValueFromEvent={props.normFile} for FC or this.props.normFile for CC\r\n\r\nexport const CreatePostButton = (props) => { console.log(props);\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n    const [eventMsg, setEventMsg] = React.useState(\"\");\r\n    const [eventImg, setEventImg] = React.useState(null);\r\n\r\n    const [homeUpdate, setHomeUpdate] = React.useState(false);\r\n\r\n    const showModal = () => {\r\n        setVisible(true);\r\n    };\r\n\r\n    const handleEventImg=(e)=>{\r\n        setEventImg(normFile(e));\r\n    }\r\n    const handleEventMsg=(e)=>{\r\n        setEventMsg(e.target.value);\r\n   //     return e.target.value; //<input value=xxx i.e. {} or ''\r\n    }\r\n//handleEventValue=(getValueFromEvent)=>{setEventValue(getValueFromEvent);}\r\n    const handleOk = () =>  {\r\n        setConfirmLoading(true);\r\n   //     console.log(eventMsg);\r\n     //   console.log(eventImg);\r\n//fire API\r\n        try{\r\n            console.log(eventMsg);\r\n            console.log(eventImg);\r\n            //fire api call\r\n            const formData=new FormData();\r\n            const loc = JSON.parse(localStorage.getItem(\"POS_KEY\"));\r\n            formData.set(\"lat\",loc.lat);\r\n            formData.set(\"lon\",loc.lon);\r\n        //    formData.set(\"lat\",loc.lat + 2*Math.random()*LOC_SHAKE - LOC_SHAKE);\r\n        //    formData.set(\"lon\",loc.lon + 2*Math.random()*LOC_SHAKE - LOC_SHAKE);\r\n            formData.set(\"message\",eventMsg);\r\n            formData.set(\"image\",eventImg[0].originFileObj);\r\n            const softtoken=localStorage.getItem(TOKEN_KEY);\r\n            fetch(`${API_ROOT}/post`, {\r\n                method: 'POST',\r\n                body: formData,\r\n                headers: {\r\n                    Authorization: `${AUTH_HEADER} ${softtoken}`\r\n                }\r\n            }).then((response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                }\r\n                throw new Error(response.statusText);\r\n            }).then((response) => {\r\n                message.success('Post Succeed');\r\n                console.log(response);\r\n                setConfirmLoading(false);\r\n                setVisible(false);\r\n                props.loadNBPost();//this//loadNearbyPost(); //reflesh homepage\r\n                // operations = <CreatePostButton loadNBPost={this.loadNearbyPosts}/>; in home.js\r\n            //    props.history.push(\"/home\"); //<CPB {...props}/> at home.js&& <Home {...props}/> at getStatus @Main.js\r\n                //push history not seem to reflesh the homepage as props.loadNBPost() does\r\n                //operations = <CreatePostButton {...this.props}/> in home.js\r\n\r\n          //      setHomeUpdate(true);\r\n                //    return <Redirect to=\"/home\" />;\r\n                //      return <Home toSignOut={props.toLogOut}/>;\r\n\r\n            }).catch((e) => {\r\n                message.error('Post Failed');\r\n                console.log(e);\r\n                setConfirmLoading(false);\r\n             //   props.form.resetFields();\r\n            //    form.resetFields();\r\n            });\r\n\r\n        }catch(err){\r\n            alert(err);\r\n            console.log(err);\r\n        }\r\n        /*\r\n        setTimeout(() => {\r\n            setVisible(false);\r\n            setConfirmLoading(false);\r\n        }, 2000);\r\n         */\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        setVisible(false);\r\n    };\r\n\r\n    //return homeUpdate?<Home toSignOut={props.toLogOut}/>:(\r\n   // return homeUpdate?<Redirect to='/home' />:(\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                Create New Post\r\n            </Button>\r\n            <Modal\r\n                title=\"Create New Post\"\r\n                visible={visible}\r\n                onOk={handleOk}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}\r\n                okText=\"Create\"\r\n            >\r\n                <CreatePostForm handleEVMsg={handleEventMsg} handleEVImg={handleEventImg}/>\r\n            </Modal>\r\n        </>\r\n    );\r\n    //getValueFromEvent={this.props.normFile}\r\n    //<CreatePostForm normFile={normFile}>\r\n    //getValueFromEvent={this.props.handleEV}\r\n    //<CreatePostForm normFile={normFile} handleEV={handleEventValue}/> <CreatePostForm handleEV={handleEventValue}/>\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\CreatePostForm.js",["90","91"],"import React from 'react';\r\nimport {Form, Input, Upload} from \"antd\";\r\nimport {InboxOutlined} from '@ant-design/icons';\r\n\r\n/*\r\nconst normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n}; //getValueFromEvent={normFile}\r\n */\r\n\r\nfunction b4ULbu (){return false;} //beforeUpload={b4ULbu}\r\nconst b4ULbu2 = ()=>{return false;}  //beforeUpload={b4ULbu2}\r\nconst b4ULbu3 = () => false; //beforeUpload={b4ULbu3}\r\n\r\nexport class CreatePostForm extends React.Component{\r\n    b4UL = ()=>{return false;}  //beforeUpload={this.b4UL}\r\n    b4UL2 = () => false; //beforeUpload={this.b4UL2}\r\n\r\n  // wrong b4UL3 below\r\n   //  this.state.b4UL3={false}; //b4UL3={false}; //both inside <> or false should be field here inside {} or var/const/let outside class\r\n   // b4UL3=false; ok grammarily//use const b4UL3=false outside class inside/outside function\r\n\r\n   // state={b4UL3:false,}\r\n    //equals to constructor (props){super(props);this.state={b4UL3:false,};}\r\n//beforeUpload={this.b4UL3}\r\n\r\n    // beforeUpload={false}??? or just beforeUpload???\r\n    //or use const [,]=React.useState(false)\r\n\r\n    render(){\r\n        const formItemLayout={\r\n            labelCol :{span: 6},\r\n            wrapperCol: {span: 14},\r\n        }; //{...formItemLayout}\r\n        return (\r\n            <Form {...formItemLayout}>\r\n                <Form.Item\r\n                    name=\"message\"\r\n                    label=\"Message\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your messages!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input placeholder=\"Please input your messages\" onChange={this.props.handleEVMsg}/>\r\n                </Form.Item>\r\n                <Form.Item label=\"Image\"\r\n                           name=\"Image\"\r\n                           rules={[\r\n                               {\r\n                                   required: true,\r\n                                   message: 'Please select your image!',\r\n                               },\r\n                           ]}\r\n                >\r\n                    <Form.Item name=\"image\"\r\n                               valuePropName=\"fileList\"\r\n                               getValueFromEvent={this.props.handleEVImg}\r\n                               noStyle\r\n                    >\r\n                        <Upload.Dragger name=\"files\" beforeUpload={b4ULbu}>\r\n                            <p className=\"ant-upload-drag-icon\">\r\n                                <InboxOutlined />\r\n                            </p>\r\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                            <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\r\n                        </Upload.Dragger>\r\n                    </Form.Item>\r\n                </Form.Item>\r\n            </Form>\r\n\r\n\r\n\r\n        );\r\n        //getValueFromEvent={this.props.normFile} //handleEV=(getValueFromEvent)=>{setEventValue(getValueFromEvent);}\r\n        //<CreatePostForm normFile={normFile}> <CreatePostForm normFile={normFile} handleEV={handleEventValue}/>\r\n        //getValueFromEvent={this.props.handleEV}\r\n        //<CreatePostForm normFile={normFile} handleEV={handleEventValue}/> <CreatePostForm handleEV={handleEventValue}/>\r\n\r\n   //onChange={(e)=>{this.props.handleEVMsg(e);}}  getValueFromEvent={(e)=>this.props.handleEVImg}\r\n    }\r\n}","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\AroundMap.js",["92","93"],"import React from 'react';\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n} from \"react-google-maps\";\nimport {AroundMarker} from \"./AroundMarker\";\n\nclass NormalAroundMap extends React.Component{\n    render () {\n        const geoloc = JSON.parse(localStorage.getItem(\"POS_KEY\"));\n        const {lat,lon} = JSON.parse(localStorage.getItem(\"POS_KEY\"));\n        // const {lat,lon: lng} such that position={{lat,lng}}\n        return (\n            <GoogleMap\n                defaultZoom={8}\n                defaultCenter={{lat:geoloc.lat,lng:lon}}\n                >\n                {\n                    this.props.poststuff.map( eachpost =>\n                        <AroundMarker key={eachpost.url} postinfo={eachpost}/>)\n                }\n\n            </GoogleMap>\n        );\n        //<GoogleMap></GoogleMap> <AroundMarker />\n    }\n}\nexport const AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));","C:\\Users\\Administrator\\test\\my-project\\around-web\\src\\components\\AroundMarker.js",[],{"ruleId":"94","severity":1,"message":"95","line":7,"column":9,"nodeType":"96","messageId":"97","endLine":7,"endColumn":20},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":20,"column":25,"nodeType":"104","endLine":20,"endColumn":81},{"ruleId":"94","severity":1,"message":"105","line":3,"column":9,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"106","line":23,"column":9,"nodeType":"96","messageId":"97","endLine":23,"endColumn":14},{"ruleId":"94","severity":1,"message":"107","line":5,"column":14,"nodeType":"96","messageId":"97","endLine":5,"endColumn":20},{"ruleId":"94","severity":1,"message":"108","line":15,"column":30,"nodeType":"96","messageId":"97","endLine":15,"endColumn":38},{"ruleId":"94","severity":1,"message":"109","line":17,"column":19,"nodeType":"96","messageId":"97","endLine":17,"endColumn":28},{"ruleId":"94","severity":1,"message":"110","line":18,"column":15,"nodeType":"96","messageId":"97","endLine":18,"endColumn":23},{"ruleId":"94","severity":1,"message":"111","line":19,"column":9,"nodeType":"96","messageId":"97","endLine":19,"endColumn":13},{"ruleId":"94","severity":1,"message":"112","line":25,"column":12,"nodeType":"96","messageId":"97","endLine":25,"endColumn":18},{"ruleId":"94","severity":1,"message":"113","line":25,"column":20,"nodeType":"96","messageId":"97","endLine":25,"endColumn":29},{"ruleId":"94","severity":1,"message":"110","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":17},{"ruleId":"94","severity":1,"message":"111","line":6,"column":9,"nodeType":"96","messageId":"97","endLine":6,"endColumn":13},{"ruleId":"94","severity":1,"message":"114","line":7,"column":9,"nodeType":"96","messageId":"97","endLine":7,"endColumn":18},{"ruleId":"94","severity":1,"message":"115","line":34,"column":12,"nodeType":"96","messageId":"97","endLine":34,"endColumn":22},{"ruleId":"94","severity":1,"message":"116","line":34,"column":24,"nodeType":"96","messageId":"97","endLine":34,"endColumn":37},{"ruleId":"94","severity":1,"message":"117","line":18,"column":7,"nodeType":"96","messageId":"97","endLine":18,"endColumn":14},{"ruleId":"94","severity":1,"message":"118","line":19,"column":7,"nodeType":"96","messageId":"97","endLine":19,"endColumn":14},{"ruleId":"94","severity":1,"message":"119","line":6,"column":5,"nodeType":"96","messageId":"97","endLine":6,"endColumn":11},{"ruleId":"94","severity":1,"message":"120","line":13,"column":16,"nodeType":"96","messageId":"97","endLine":13,"endColumn":19},"no-unused-vars","'GalleryShow' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'test' is defined but never used.","'Login' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'TOKEN_KEY' is defined but never used.","'Redirect' is defined but never used.","'Home' is defined but never used.","'testbu' is assigned a value but never used.","'setTestBU' is assigned a value but never used.","'LOC_SHAKE' is defined but never used.","'homeUpdate' is assigned a value but never used.","'setHomeUpdate' is assigned a value but never used.","'b4ULbu2' is assigned a value but never used.","'b4ULbu3' is assigned a value but never used.","'Marker' is defined but never used.","'lat' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]